datasource db {
  provider          = "mysql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  relationMode      = "prisma"
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id             String   @id @default(uuid())
  username       String   @unique
  password       String
  name           String
  email          String
  phoneNumber    String
  profilePicture String
  Booking        Booking[]
  Review         Review[]
}

model Booking {
  id             String   @id @default(uuid())
  userId         String
  propertyId     String
  checkinDate    DateTime
  checkoutDate   DateTime
  numberOfGuests Int
  totalPrice     Int
  bookingStatus  String

  user     User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  property Property @relation(fields: [propertyId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([propertyId])
}

model Review {
  id         String @id @default(uuid())
  userId     String
  propertyId String
  rating     Int
  comment    String

  user     User     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  property Property @relation(fields: [propertyId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([propertyId])
}

model Property {
  id            String           @id @default(uuid())
  hostId        String
  title         String
  description   String
  location      String
  pricePerNight Decimal          @db.Decimal(10, 2)
  bedroomCount  Int
  bathRoomCount Int
  maxGuestCount Int
  rating        Int

  reviews   Review[]
  bookings  Booking[]
  host      Host              @relation(fields: [hostId], references: [id], onDelete: Cascade)

  @@index([hostId])
}

model Host {
  id             String     @id @default(uuid())
  username       String     @unique
  password       String
  name           String
  email          String
  phoneNumber    String
  profilePicture String
  aboutMe        String

  listings Property[]
}
